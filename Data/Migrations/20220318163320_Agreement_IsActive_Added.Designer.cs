// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220318163320_Agreement_IsActive_Added")]
    partial class Agreement_IsActive_Added
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data.Entities.Agreement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UptDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Agreements");
                });

            modelBuilder.Entity("Data.Entities.CommonFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Path")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UptDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CommonFiles");
                });

            modelBuilder.Entity("Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Job")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UptDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CrtDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@heart4refugees.org",
                            Name = "Admin",
                            PasswordHash = new byte[] { 40, 148, 12, 59, 112, 190, 150, 11, 242, 31, 127, 40, 62, 157, 43, 187, 19, 139, 177, 16, 125, 155, 26, 169, 179, 255, 251, 248, 77, 112, 236, 148, 48, 101, 226, 52, 140, 136, 186, 67, 144, 130, 138, 11, 2, 177, 60, 191, 209, 106, 213, 112, 78, 239, 211, 30, 248, 232, 98, 211, 160, 30, 229, 164 },
                            PasswordSalt = new byte[] { 112, 254, 12, 25, 91, 72, 57, 43, 177, 240, 227, 253, 18, 175, 11, 81, 57, 168, 6, 162, 221, 73, 23, 24, 38, 179, 170, 140, 124, 188, 198, 194, 54, 61, 191, 29, 151, 57, 89, 46, 226, 154, 233, 80, 11, 183, 251, 69, 106, 110, 108, 90, 209, 93, 199, 89, 98, 190, 64, 143, 131, 205, 112, 164, 208, 193, 91, 93, 210, 203, 112, 80, 186, 118, 86, 138, 83, 121, 149, 73, 35, 30, 131, 54, 110, 10, 199, 207, 213, 47, 43, 171, 239, 55, 17, 183, 143, 51, 49, 254, 71, 10, 87, 27, 46, 14, 245, 186, 150, 176, 117, 173, 7, 103, 217, 212, 166, 133, 68, 56, 196, 63, 255, 34, 203, 94, 3, 233 },
                            Role = "admin",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Data.Entities.Volunteer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CancellationReason")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HomeNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<Guid>("Key")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Organisations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Skills")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UptDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UptUsr")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("Volunteers");
                });

            modelBuilder.Entity("Data.Entities.VolunteerAgreement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgreementId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UptDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VolunteerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgreementId");

                    b.HasIndex("VolunteerId");

                    b.ToTable("VolunteerAgreements");
                });

            modelBuilder.Entity("Data.Entities.VolunteerFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CommonFileId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UptDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VolunteerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommonFileId");

                    b.HasIndex("VolunteerId");

                    b.ToTable("VolunteerFiles");
                });

            modelBuilder.Entity("Data.Entities.VolunteerAgreement", b =>
                {
                    b.HasOne("Data.Entities.Agreement", "Agreement")
                        .WithMany()
                        .HasForeignKey("AgreementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Volunteer", "Volunteer")
                        .WithMany("VolunteerAgreements")
                        .HasForeignKey("VolunteerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agreement");

                    b.Navigation("Volunteer");
                });

            modelBuilder.Entity("Data.Entities.VolunteerFile", b =>
                {
                    b.HasOne("Data.Entities.CommonFile", "CommonFile")
                        .WithMany()
                        .HasForeignKey("CommonFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Volunteer", "Volunteer")
                        .WithMany("VolunteerFiles")
                        .HasForeignKey("VolunteerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommonFile");

                    b.Navigation("Volunteer");
                });

            modelBuilder.Entity("Data.Entities.Volunteer", b =>
                {
                    b.Navigation("VolunteerAgreements");

                    b.Navigation("VolunteerFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
