// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211213011345_AdminDataSeed")]
    partial class AdminDataSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Job")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@heart4refugees.org",
                            Name = "Admin",
                            PasswordHash = new byte[] { 180, 191, 129, 114, 124, 155, 15, 216, 116, 172, 34, 202, 36, 65, 71, 176, 170, 40, 127, 124, 101, 61, 186, 170, 254, 13, 72, 157, 135, 89, 60, 117, 49, 219, 0, 219, 148, 233, 203, 145, 50, 71, 109, 48, 131, 60, 208, 81, 193, 43, 230, 122, 101, 66, 97, 83, 101, 108, 208, 110, 164, 172, 220, 254 },
                            PasswordSalt = new byte[] { 181, 221, 207, 61, 198, 80, 31, 178, 243, 135, 203, 223, 68, 23, 153, 110, 120, 25, 13, 48, 121, 174, 6, 154, 110, 174, 220, 95, 155, 177, 231, 196, 198, 17, 145, 80, 7, 77, 210, 189, 223, 240, 239, 238, 146, 27, 75, 127, 11, 50, 104, 193, 43, 137, 203, 235, 176, 85, 244, 240, 219, 4, 210, 224, 92, 221, 219, 15, 51, 192, 59, 7, 91, 5, 215, 105, 240, 25, 133, 119, 170, 227, 207, 61, 255, 19, 167, 191, 8, 131, 7, 7, 107, 129, 72, 151, 132, 20, 250, 132, 112, 86, 72, 5, 71, 195, 93, 228, 202, 23, 22, 90, 62, 32, 138, 131, 170, 163, 30, 21, 194, 204, 35, 189, 19, 18, 91, 118 },
                            Role = "admin",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Data.Entities.Volunteer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CancellationReason")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HomeNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Organisations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Skills")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UptDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UptUsr")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Volunteers");
                });
#pragma warning restore 612, 618
        }
    }
}
